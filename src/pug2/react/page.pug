extends ../_docs-template

block vars
  - var activeLink = 'react';
  - var title = 'Page React Component | Framework7 React Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu-react
  .docs-content
    +improveDocsLink
    h1 Page React Component
    ul.docs-index
    p Page in Framework7 has the same meaning as when you think about web pages. Page is the main component to display and operate content.
    p Page React component represents Framework7's <a href="../docs/page.html">Page</a>.
    h2 Page Components
    p There are following components included:
    ul
      li `Page`  - main page element
      li `PageContent`  - additional inner page content element

    h2 Page Properties
    table.params-table
      thead
        tr
          th Prop
          th Type
          th Default
          th Description
      tbody
        tr
          th(colspan="4") &lt;Page&gt; properties
        tr
          td name
          td string
          td
          td Page name
        tr
          td stacked
          td boolean
          td
          td Enable for not currently active page if you use `stackedPages` Router parameter that keeps all pages in DOM
        tr
          td messagesContent
          td boolean
          td
          td Enable if you use <a href="messages.html">Messages</a> component inside to add required extra styling
        tr
          td pageContent
          td boolean
          td true
          td When enabled it automatically adds `page-content` element inside. Usefule to disable when you need to use few page-content elements for tabs
        tr
          td tabs
          td boolean
          td
          td Enable if you use Page as <a href="tabs.html">Tabs</a> wrapper
        tr
          td loginScreen
          td boolean
          td
          td Enable if you use <a href="login-screen.html">Login Screen</a> inside of the page to add required extra styling
        tr
          td noSwipeback
          td boolean
          td
          td Disables swipeback feature for the current page (affects iOS theme only)
        tr
          td withSubnavbar
          td boolean
          td
          td Enable if you have Sub Navbar inside of the page
        tr
          td noNavbar
          td boolean
          td
          td Enable if you use common Navbar layout and need to hide common Navbar (or use another one) for this page (affects iOS theme only)
        tr
          td noToolbar
          td boolean
          td
          td Enable if you use common Toolbar/Tabbar layout and need to hide Toolbar (or use another one) for this page
        tr
          td hideBarsOnScroll
          td boolean
          td
          td Hide Navbar & Toolbar on page scroll
        tr
          td hideNavbarOnScroll
          td boolean
          td
          td Hide Navbar on page scroll
        tr
          td hideToolbarOnScroll
          td boolean
          td
          td Hide Toolbar on page scroll
        tr
          td ptr
          td boolean
          td
          td Enables <a href="../docs/pull-to-refresh.html">Pull To Refresh</a>
        tr
          td ptrDistance
          td number
          td
          td Custom pull to refresh trigger distance. By default (if not specified) it is 44px.
        tr
          td ptrPreloader
          td boolean
          td true
          td Disable if you want to use custom pull to refresh preloader element
        tr
          td ptrBottom
          td boolean
          td false
          td Enables pull to refresh from bottom
        tr
          td ptrMousewheel
          td boolean
          td false
          td Enables pull to refresh with mousewheel (for desktop apps). Works only for PTR top
        tr
          td infinite
          td boolean
          td
          td Enables <a href="../docs/infinite-scroll.html">Infinite Scroll</a>
        tr
          td infiniteTop
          td boolean
          td
          td Enables infinite scroll on top of the page
        tr
          td infiniteDistance
          td number
          td
          td Distance from the bottom of page (in px) to trigger infinite scroll event. By default (if not specified), it is 50 (px)
        tr
          td infinitePreloader
          td boolean
          td true
          td Disable if you want to use custom infinite-scroll preloader
        tr
          th(colspan="4") &lt;PageContent&gt; properties
        tr
          td tab
          td boolean
          td
          td Enable if you use page-content as Tab
        tr
          td tabActive
          td boolean
          td
          td Enable if the current tab is active
        tr
          td ptr
            <br> ptrDistance
            <br> ptrPreloader
            <br> ptrBottom
            <br> ptrMousewheel
            <br> infinite
            <br> infiniteTop
            <br> infiniteDistance
            <br> infinitePreloader
            <br> hideBarsOnScroll
            <br> hideNavbarOnScroll
            <br> hideToolbarOnScroll
            <br> messagesContent
            <br> loginScreen
          td
          td
          td Same as `<Page>` properties

    h2 Page Events
    table.events-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;Page&gt; events
        tr
          td pageMounted
          td Event will be triggered when page with `keepAlive` route is mounted/attached to DOM
        tr
          td pageInit
          td Event will be triggered after Framework7 initialize required page's components and navbar
        tr
          td pageReinit
          td This event will be triggered in case of navigating to the page that was already initialized.
        tr
          td pageBeforeIn
          td Event will be triggered when everything initialized and page is ready to be transitioned into view (into active/current position)
        tr
          td pageAfterIn
          td Event will be triggered after page transitioned into view
        tr
          td pageBeforeOut
          td Event will be triggered right before page is going to be transitioned out of view
        tr
          td pageAfterOut
          td Event will be triggered after page transitioned out of view
        tr
          td pageBeforeUnmount
          td Event will be triggered when page with `keepAlive` route is going to be unmounted/detached from DOM
        tr
          td pageBeforeRemove
          td Event will be triggered right before Page will be removed from DOM. This event could be very useful if you need to detach some events / destroy some plugins to free memory. This event won't be triggered for `keepAlive` routes.
        tr
          td pageTabShow
          td Event will be triggered when page's parent <a href="/docs/tabs.html#views-as-tabs">View as Tab</a> becomes visible
        tr
          td pageTabHide
          td Event will be triggered when page's parent <a href="/docs/tabs.html#views-as-tabs">View as Tab</a> becomes hidden
        tr
          td ptrPullStart
          td Event will be triggered when you start to move pull to refresh content
        tr
          td ptrPullMove
          td Event will be triggered during you move pull to refresh content
        tr
          td ptrPullEnd
          td Event will be triggered when you release pull to refresh content
        tr
          td ptrRefresh
          td Event will be triggered when pull to refresh enters in "refreshing" state
        tr
          td ptrDone
          td Event will be triggered after pull to refresh is done and it is back to initial state (after calling <b>pullToRefreshDone</b> method)
        tr
          td infinite
          td Event will be triggered when page scroll reaches specified (in data-distance attribute) distance to the bottom.
        tr
          th(colspan="2") &lt;PageContent&gt; events
        tr
          td tabShow
          td Event will be triggered when Tab becomes visible/active
        tr
          td tabHide
          td Event will be triggered when Tab becomes hidden/inactive
        tr
          td ptrPullStart
            | <br> ptrPullMove
            | <br> ptrPullEnd
            | <br> ptrEefresh
            | <br> ptrDone
            | <br> infinite
          td Same as `<Page>` events
    h2 Page Slots
    p Page React component (`<Page>`) has additional slots for custom elements:
    ul
      li `default` - element will be inserted as a child of  "page-content", if `page-content` prop is enabled (by default)
      li `fixed` - element will be inserted as a direct child of "page" right before "page-content"
    :code(lang="jsx")
          <Page>
            <div slot="fixed">Fixed element</div>
            <p>Page content goes here</p>
          </Page>

          {/* Renders to: */}

          <div class="page">
            <div>Fixed element</div>
            <div class="page-content">
              <p>Page content goes here</p>
            </div>
          </div>
    .with-device
      h2 Examples
      h3(data-device-preview="../docs-demos/react/infinite-scroll.html") Infinite Scroll
      include:reactSource ../docs-demos/react/infinite-scroll.jsx

      h3(data-device-preview="../docs-demos/react/pull-to-refresh.html") Pull To Refresh
      include:reactSource ../docs-demos/react/pull-to-refresh.jsx
