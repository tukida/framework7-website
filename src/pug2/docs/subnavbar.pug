extends ../_docs-template

block vars
  - var title = 'Subnavbar | Framework7 Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu
  .docs-content
    +improveDocsLink
    h1 Subnavbar
    ul.docs-index
    p Subnavbar is useful when you need to put any additional elements into Navbar, like Tab Links or Searchbar. It also remains visible when Navbar hidden
    h2 Subnavbar Layout
    h4 In Navbar
    :code(lang="html")
          <div class="page page-with-subnavbar">
            <!-- Navbar -->
            <div class="navbar">
              <div class="navbar-bg"></div>
              <div class="navbar-inner sliding">
                <div class="left">...</div>
                <div class="title">...</div>
                <div class="right">...</div>

                <!-- Subnavbar -->
                <div class="subnavbar">
                  <div class="subnavbar-inner">
                    <!-- Subnavbar content, for example tabs buttons -->
                    <div class="segmented">
                      <a href="#tab1" class="button button-active">Tab 1</a>
                      <a href="#tab2" class="button">Tab 2</a>
                      <a href="#tab3" class="button">Tab 3</a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Page content -->
            <div class="page-content">
              ...
            </div>
          </div>
    p Along with "left", "right" and "title" elements, "subnavbar" also supports "sliding" class for sliding transition when used with Dynamic Navbar.
    .important-note
      p Note that page that contains Subnavbar must have additional `page-with-subnavbar` class which adds additional top padding required for subnavbar
    h4 In Page
    p It is also possible to put it as a direct child of `page` right after Navbar:
    :code(lang="html")
          <div class="page page-with-subnavbar">
            <!-- Navbar -->
            <div class="navbar">
              <div class="navbar-bg"></div>
              <div class="navbar-inner">
                <div class="left">...</div>
                <div class="title">...</div>
                <div class="right">...</div>
              </div>
            </div>
            <!-- Subnavbar -->
            <div class="subnavbar">
              <div class="subnavbar-inner">
                <!-- Subnavbar content, for example tabs buttons -->
                <div class="segmented">
                  <a href="#tab1" class="button button-active">Tab 1</a>
                  <a href="#tab2" class="button">Tab 2</a>
                  <a href="#tab3" class="button">Tab 3</a>
                </div>
              </div>
            </div>
            <!-- Page content -->
            <div class="page-content">
              ...
            </div>
          </div>
    h4 In Page Content
    p It is also possible to put it as a direct child of `page-content`. In this case it will be static and scroll with the page content:
    :code(lang="html")
          <div class="page page-with-subnavbar">
            <!-- Navbar -->
            <div class="navbar">
              <div class="navbar-bg"></div>
              <div class="navbar-inner">
                <div class="left">...</div>
                <div class="title">...</div>
                <div class="right">...</div>
              </div>
            </div>

            <!-- Page content -->
            <div class="page-content">
              <!-- Subnavbar -->
              <div class="subnavbar">
                <div class="subnavbar-inner">
                  <!-- Subnavbar content, for example tabs buttons -->
                  <div class="segmented">
                    <a href="#tab1" class="button button-active">Tab 1</a>
                    <a href="#tab2" class="button">Tab 2</a>
                    <a href="#tab3" class="button">Tab 3</a>
                  </div>
                </div>
              </div>
              ...
            </div>
          </div>

    h4 With Title
    p We can also use special `subnavbar-title` element to use Subnavbar to display larger title:
    :code(lang="html")
      ...
      <div class="subnavbar">
        <div class="subnavbar-inner">
          <!-- Subnavbar title -->
          <div class="subnavbar-title">Title</div>
        </div>
      </div>
      ...

    +cssVars('subnavbar')

    .with-device
      h2(data-device-preview="../docs-demos/core/subnavbar.html") Example
      include:coreSource ../docs-demos/core/subnavbar.f7.html
