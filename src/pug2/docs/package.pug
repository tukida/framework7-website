extends ../_docs-template

block vars
  - var title = 'Framework7 Package Structure | Framework7 Documentation';

block content
  .docs-nav
    include ../_docs-menu
  .docs-content
    +improveDocsLink
    h1 Framework7 Package Structure
    ul.docs-index
    h2 Package
    p Framework7 core library contains the following files and folders:
    :code(lang="html")
      framework7/
          bundle/
             package.json
          cjs/
              components/
              modules/
              shared/
              framework7-bundle.js
              framework7-lite-bundle.js
              framework7-lite.js
              framework7.js
          components/
              accordion/
                  accordion-aurora.less
                  accordion-ios.less
                  accordion-md.less
                  accordion-rtl.css
                  accordion-vars.less
                  accordion.css
                  accordion.d.ts
                  accordion.js
                  accordion.less
                  package.json
              ...
          core/
              package.json
          esm/
              components/
              modules/
              shared/
              framework7-bundle.js
              framework7-lite-bundle.js
              framework7-lite.js
              framework7.js
          less/
          lite/
              package.json
          lite-bundle/
              package.json
          modules/
          types/
          framework7-bundle-rtl.css
          framework7-bundle-rtl.min.css
          framework7-bundle.css
          framework7-bundle.js
          framework7-bundle.js
          framework7-bundle.less
          framework7-bundle.min.css
          framework7-bundle.min.js
          framework7-bundle.min.js
          framework7-rtl.css
          framework7-rtl.min.css
          framework7.css
          framework7.d.ts
          framework7.js
          framework7.js
          framework7.less
          framework7.min.css
          framework7.min.js
          framework7.min.js
    h2 Lite Version
    p Framework7 "Lite" version (files with `-lite` suffix) doesn't have Framework7 Component (Router Component) functionality, Core APIs for Gauge, Pie Chart and Area Chart components. It is designed to be used with Framework7-Vue/React/Svelte libraries where you use Vue/React/Svelte components instead.
    p Lite version are only available for ESM and CJS packages.

    h2 Styles
    p Main Framework7 styles are located in root package folder:
    ul
      li `framework7.css` - contains minimal (core) Framework7 styles with minimal required set of components.
      li `framework7-rtl.css` - same but for RTL layout.
      li `framework7-bundle.css` - contains styles for Framework7 core version and includes styles for all components.
      li `framework7-bundle-rtl.css` - same but for RTL layout.

    h2 Scripts (UMD)
    p In root folder there are so called #[a(href="https://github.com/umdjs/umd", target="_blank") UMD] JavaScript files intended to be used directly in browser (e.g. with `<script src="...">`):
    ul
      li `framework7.js` - contains minimal (core) Framework7 version with minimal required set of components.
      li `framework7-bundle.js` - contains whole Framework7 with all its components.
    p Lite version is not available in UMD format.

    h2 Components
    p All components are located in `components/` folder and required to be used with core (not bundle) version. You can learn more about how to use them in #[a(href="lazy-modules.html") lazy modules] section.

    h2 ES Module
    .important-note
      p This feature currently can be used in bundlers like Webpack and Rollup
    p Framework7 can also be imported as an ES-next module:
    :code(lang="js")
      import Framework7 from 'framework7';
    p Framework7 has modular structure and <b>by default it exports only core Framework7 with core components</b>.
    p And if you need additional components they must be included additionally:
    :code(lang="js")
      // Import core framework
      import Framework7 from 'framework7';

      // Import additional components
      import Searchbar from 'framework7/components/searchbar/';
      import Calendar from 'framework7/components/calendar/';
      import Popup from 'framework7/components/popup/';

      // Install F7 Components using .use() method on class:
      Framework7.use([Searchbar, Calendar, Popup]);

      // Init app
      var app = new Framework7({/*...*/});
    p Such modular structure provides best tree-shaking results and package size optimization.
    p In addition to `default` export it has named export for `Dom7`, `request`, `getDevice`, `createStore`, `utils` and `getSupport` helpers:
    :code(lang="js")
      import Framework7, { getDevice, request } from 'framework7';

      var app = new Framework7({/*...*/});

      var device = getDevice();

      if (device.ios) {
        request.get('http://google.com');
      }
    p "Lite" module is also available:
    :code(lang="js")
      import Framework7 from 'framework7/lite';

    h2 ES Module Bundle
    p If you need to include Framework7 with all components, we can include its another script bundle with all components installed:
    :code(lang="js")
      // Import framework with all components
      import Framework7 from 'framework7/bundle';

      // Init app
      var app = new Framework7({/*...*/});
    p "Lite" bundle module is also available:
    :code(lang="js")
      import Framework7 from 'framework7/lite-bundle';
