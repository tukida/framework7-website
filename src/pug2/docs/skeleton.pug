extends ../_docs-template

block vars
  - var title = 'Skeleton | Framework7 Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu
  .docs-content
    +improveDocsLink
    h1 Skeleton
    ul.docs-index
    p Framework7 comes with Skeleton Elements library (aka UI Skeletons, Skeleton Screens, Ghost Elements) - UI for improved perceived performance.
    p Skeleton Elements library already integrated into Framework7 and you don't have to install it separately. For the full API documentation and more examples check out the official <a href="https://skeleton-elements.dev/core/" target="_blank">Skeleton Elements documentation</a>.

    h2 Skeleton Block
    p Skeleton block is just a usual block element with gray background color, that can be in any required size.
    p To create skeleton block element we just need to create `div` element with `skeleton-block` class and better with fixed width:
    :code(lang="html")
      ...
      <div class="list">
        <ul>
          <li class="item-content">
            <div class="item-inner">
              <div class="item-title">
                <!-- Use skeleton block instead of list item title -->
                <div class="skeleton-block" style="width: 100px"></div>
              </div>
            </div>
          </li>
        </ul>
      </div>
      ...

    h2 Skeleton Text
    p Skeleton text is more interesting thing. Framework7 comes with special built-in Skeleton font, that renders every character as small gray rectangle. When we apply `skeleton-text` class to any element, it converts text to gray blocks/lines. Advantage over `skeleton-block` is that such "skeleton text" can be fully responsive and its size will reflect actual text size.
    p Skeleton text font supports following characters set (including "space"):
    :code
      0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w z x y z A B C D E F G H I J K L M N O P Q R S T U V W Z X Y Z _ -   . , : ; / ! / * & ' " | ( ) { } [ ]
    :code(lang="html")
      ...
      <div class="list media-list">
        <ul>
          <!-- we just add "skeleton-text" class to list item and its text will be rendered as gray boxes -->
          <li class="item-content skeleton-text">
            <div class="item-inner">
              <div class="item-title-row">
                <div class="item-title">Item Title</div>
              </div>
              <div class="item-subtitle">Item Subtitle</div>
              <div class="item-text">Item text goes here, and it will be rendered as gray box too.</div>
            </div>
          </li>
          <!-- In the next item we use "_" character instead of actual text -->
          <li class="item-content skeleton-text">
            <div class="item-inner">
              <div class="item-title-row">
                <div class="item-title">____ _____</div>
              </div>
              <div class="item-subtitle">____ _______</div>
              <div class="item-text">____ ____ ____ _____ ___ __ ____ __ ________ __ ____ ___ ____</div>
            </div>
          </li>
        </ul>
      </div>
      ...

    h2 Skeleton Effects
    p Skeleton elements also support three animation effects: Fade, Wave and Pulse.
    p To enable special skeleton animation effect, we can need add one of the following classes to skeleton elements, or to parent element containing skeleton elements:
    ul
      li `skeleton-effect-fade` - to add fade effect
      li `skeleton-effect-wave` - to add wave effect
      li `skeleton-effect-pulse` - to add pulse effect

    +cssVars('skeleton')

    .with-device
      h2(data-device-preview="../docs-demos/core/skeleton.html") Examples
      include:coreSource ../docs-demos/core/skeleton.f7.html
