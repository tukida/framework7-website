extends ../_docs-template

block vars
  - var activeLink = 'svelte';
  - var title = 'Photo Browser Svelte Component | Framework7 Svelte Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu-svelte
  .docs-content
    +improveDocsLink
    h1 Photo Browser Svelte Component
    ul.docs-index
    p Photo Browser is an photo browser component to display collection of photos / images. Photos can be zoomed and panned (optional).
    p Photo Browser Svelte component represents Framework7's <a href="../docs/photo-browser.html">Photo Browser</a> component.
    .important-note
      p Photo Browser Svelte component doesn't render any output. It can be used to create JS Photo Browser instance and control it inside of your Svelte component.
    h2 Photo Browser Component
    p There are following components included:
    ul
      li `PhotoBrowser`
    h2 Photo Browser Properties
    p You can pass all parameters in single `params` property or use separate props for each parameter to specify them via component properties:
    table.params-table
      thead
        tr
          th Prop
          th Type
          th Default
          th Description
      tbody
        tr
          th(colspan="4") &lt;PhotoBrowser&gt; properties
        tr
          td init
          td boolean
          td true
          td Initializes Photo Browser
        tr
          td params
          td Object
          td
          td Object with <a href="../docs/photo-browser.html#photo-browser-parameters">Photo Browser parameters</a>
        tr
          td photos
          td array
          td []
          td Array with URLs of photos or array of objects with "url" (or "html") and "caption" properties.
        tr
          td url
          td string
          td photos/
          td Photo browser modal URL that will be set as a current route
        tr
          td routableModals
          td boolean
          td false
          td Will add opened photo browser to router history which gives ability to close photo browser by going back in router history and set current route to the photo browser modal
        tr
          td swiper
          td object
          td
          td Object with Swiper parameters. By default equals to:
            :code(lang="js")
                  swiper: {
                    initialSlide: 0,
                    spaceBetween: 20,
                    speed: 300,
                    loop: false,
                    preloadImages: true,
                    navigation: {
                      nextEl: '.photo-browser-next',
                      prevEl: '.photo-browser-prev',
                    },
                    zoom: {
                      enabled: true,
                      maxRatio: 3,
                      minRatio: 1,
                    },
                    lazy: {
                      enabled: true,
                    },
                  },
        tr
          td virtualSlides
          td boolean
          td true
          td When enabled then Swiper will use Virtual Slides
        tr
          td exposition
          td boolean
          td true
          td Enable disable exposition mode when clicking on Photo Browser.
        tr
          td expositionHideCaptions
          td boolean
          td false
          td Set to true if you also want to hide captions in exposition mode
        tr
          td swipeToClose
          td boolean
          td true
          td You can close Photo Browser with swipe up/down when this parameter is enabled
        tr
          td type
          td string
          td standalone
          td Define how Photo Browser should be opened. Could be `standalone` (will be opened as an overlay with custom transition effect), `popup` (will be opened as popup), `page` (will be injected to View and loaded as a new page).
        tr
          td theme
          td string
          td light
          td Photo Browser color theme, could be `light` or `dark`
        tr
          td captionsTheme
          td string
          td
          td Captions color theme, could be also `dark` or `light`. By default, equal to "theme" parameter
        tr
          td navbar
          td boolean
          td true
          td Set to false to remove Photo Browser's Navbar
        tr
          td toolbar
          td boolean
          td true
          td Set to false to remove Photo Browser's Toolbar
        tr
          td pageBackLinkText
          td string
          td Back
          td Text on back link in Photo Browser's navbar
        tr
          td popupCloseLinkText
          td string
          td Close
          td Text on close link in Photo Browser's navbar when opened in Popup or as Standalone
        tr
          td navbarShowCount
          td boolean
          td undefined
          td Defines should it display "3 of 5" text in navbar title or not. If not specified (undefined) then it will show this text if there is more than 1 item
        tr
          td navbarOfText
          td string
          td of
          td Text of "of" in photos counter: "3 of 5"
        tr
          td iconsColor
          td string
          td
          td One of the <a href="../docs/color-themes.html">default colors</a>
    h2 Photo Browser Events
    table.events-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;PhotoBrowser&gt; events
        tr
          td photoBrowserOpen
          td Event will be triggered on Photo Browser open.
        tr
          td photoBrowserOpened
          td Event will be triggered after Photo Browser completes its opening animation
        tr
          td photoBrowserClose
          td Event will be triggered on Photo Browser close.
        tr
          td photoBrowserClosed
          td Event will be triggered after Photo Browser completes its closing animation
        tr
          td photoBrowserSwipeToClose
          td This event will be triggered when user close Photo Browser with swipe up/down.
    h2 Photo Browser Methods
    p The following Photo Browser components methods are available (e.g. by accesing it via <b>bind:this</b>):
    table.methods-table
      tbody
        tr
          th(colspan="2") &lt;PhotoBrowser&gt; methods
        tr
          td .open(<span>index</span>);
          td Open Photo Browser on photo with index number equal to "index" parameter. If "index" parameter is not specified, it will be opened on last closed photo.
        tr
          td .close();
          td Close Photo Browser
        tr
          td .expositionToggle();
          td Toggle exposition mode
        tr
          td .expositionEnable();
          td Enable exposition mode
        tr
          td .expositionDisable();
          td Disable exposition mode
    h2 Access To Photo Browser Instance
    p You can access Photo Browser initialized instance by calling `.instance()` component's method. For example:
    ```svelte
      <PhotoBrowser bind:this={component}>...</PhotoBrowser>

      <script>
        let component;

        // to get instance in some method
        component.instance()
      </script>
    ```

    .with-device
      h2(data-device-preview="../docs-demos/svelte/photo-browser.html") Examples
      include:svelteSource ../docs-demos/svelte/photo-browser.svelte
